{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACtC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,KAAK,GAAI,OAAO,CAAC,YAAY,CAAC,CAAC;AACnC,IAAI,IAAI,GAAK,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAAI,IAAI,GAAK,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE7B,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC;AAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;;AAE1C,SAAS,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE;AAChC,MAAI,EAAE,IAAI,YAAY,QAAQ,CAAA,AAAC,EAAE;AAC/B,WAAO,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC;GAC3C;;AAED,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5B,MAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,MAAI,CAAC,KAAK,GAAG,MAAM,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,EAAE,IAAI,CAAC,CAAC;CACjD;;AAED,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE;AAC5D,MAAI,CAAC,KAAK,IAAI,GAAG,CAAC;AAClB,UAAQ,EAAE,CAAC;CACZ,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,QAAQ,EAAE;AAC9C,MAAI;AACF,QAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;AACxD,QAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACjB,CAAC,OAAM,GAAG,EAAE;AACX,QAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AACxB,WAAO;GACR;AACD,UAAQ,EAAE,CAAC;CACZ,CAAC;;AAEF,QAAQ,CAAC,SAAS,GAAG,UAAU,IAAI,EAAE;AACnC,MAAI,GAAG,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AACxB,MAAI,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;AAC/E,MAAI,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;AAC/C,MAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;;AAGxD,SAAO,IAAI,CAAC,iBAAiB,CAAC;AAC9B,SAAO,IAAI,CAAC,UAAU,CAAC;AACvB,SAAO,IAAI,CAAC,QAAQ,CAAC;;;AAGrB,SAAO,IAAI,CAAC,MAAM,CAAC;AACnB,SAAO,IAAI,CAAC,OAAO,CAAC;AACpB,SAAO,IAAI,CAAC,MAAM,CAAC;;AAEnB,SAAO,UAAU,QAAQ,EAAE;AACzB,QAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAE;AAC3C,aAAO,MAAM,CAAC,WAAW,EAAE,CAAC;KAC7B;;AAED,QAAI,iBAAiB,EAAE;AACrB,cAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;KACvD;;AAED,WAAO,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;GACrC,CAAC;CACH,CAAC","file":"index-compiled.js","sourcesContent":["var assign = require(\"object-assign\");\nvar stream = require(\"stream\");\nvar babel  = require(\"babel-core\");\nvar path   = require(\"path\");\nvar util   = require(\"util\");\n\nmodule.exports = Babelify;\nutil.inherits(Babelify, stream.Transform);\n\nfunction Babelify(filename, opts) {\n  if (!(this instanceof Babelify)) {\n    return Babelify.configure(opts)(filename);\n  }\n\n  stream.Transform.call(this);\n  this._data = \"\";\n  this._opts = assign({filename: filename}, opts);\n}\n\nBabelify.prototype._transform = function (buf, enc, callback) {\n  this._data += buf;\n  callback();\n};\n\nBabelify.prototype._flush = function (callback) {\n  try {\n    var code = babel.transform(this._data, this._opts).code;\n    this.push(code);\n  } catch(err) {\n    this.emit(\"error\", err);\n    return;\n  }\n  callback();\n};\n\nBabelify.configure = function (opts) {\n  opts = assign({}, opts);\n  var extensions = opts.extensions ? babel.util.arrayify(opts.extensions) : null;\n  var sourceMapRelative = opts.sourceMapRelative;\n  if (opts.sourceMap !== false) opts.sourceMap = \"inline\";\n\n  // babelify specific options\n  delete opts.sourceMapRelative;\n  delete opts.extensions;\n  delete opts.filename;\n\n  // browserify specific options\n  delete opts._flags;\n  delete opts.basedir;\n  delete opts.global;\n\n  return function (filename) {\n    if (!babel.canCompile(filename, extensions)) {\n      return stream.PassThrough();\n    }\n\n    if (sourceMapRelative) {\n      filename = path.relative(sourceMapRelative, filename);\n    }\n\n    return new Babelify(filename, opts);\n  };\n};\n"]}